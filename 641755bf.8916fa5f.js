(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{100:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return d})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return s}));var n=a(3),r=a(7),o=(a(0),a(145)),i=a(149),l=a(150),c={id:"add_info",title:"Adding Information",sidebar_label:"Adding Information"},d={unversionedId:"basics/add_info",id:"basics/add_info",isDocsHomePage:!1,title:"Adding Information",description:"PopData's standard/default format includes information on:",source:"@site/docs/basics/adding_information.md",slug:"/basics/add_info",permalink:"/PopGen.jl/docs/basics/add_info",editUrl:"https://github.com/pdimens/popgen.jl/edit/documentation/docs/basics/adding_information.md",version:"current",lastUpdatedAt:1607793513,sidebar_label:"Adding Information",sidebar:"docs",previous:{title:"Accessing elements",permalink:"/PopGen.jl/docs/basics/accessing"},next:{title:"Data exclusion",permalink:"/PopGen.jl/docs/basics/exclusion"}},b=[{value:"<code>add_meta!</code>",id:"add_meta",children:[]}],u={rightToc:b};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"PopData's standard/default format includes information on:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"sample name"),Object(o.b)("li",{parentName:"ul"},"sample population name"),Object(o.b)("li",{parentName:"ul"},"sample ploidy"),Object(o.b)("li",{parentName:"ul"},"same genotypes")),Object(o.b)("p",null,"But, sometimes you might want to add more information to the data structure. That's where the convenience function ",Object(o.b)("inlineCode",{parentName:"p"},"add_meta!")," come in."),Object(o.b)("h2",{id:"add_meta"},Object(o.b)("inlineCode",{parentName:"h2"},"add_meta!")),Object(o.b)("p",null,"This function has two methods, one for when the additional information you're adding is in the order with which your samples appear in ",Object(o.b)("inlineCode",{parentName:"p"},"PopData.meta"),", and another for when they don't. "),Object(o.b)(i.a,{block:!0,defaultValue:"s",values:[{label:"same order",value:"s"},{label:"different order",value:"d"}],mdxType:"Tabs"},Object(o.b)(l.a,{value:"s",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-julia"}),"add_meta!(popdata::PopData, metadata::T; name::String, loci::Bool = true, categorical::Bool = true) where T <: AbstractVector\n")),Object(o.b)("p",null,"Add an additional metadata information to a ",Object(o.b)("inlineCode",{parentName:"p"},"PopData")," object. Mutates ",Object(o.b)("inlineCode",{parentName:"p"},"PopData")," in place. Metadata\nmust be in the same order as the samples in ",Object(o.b)("inlineCode",{parentName:"p"},"PopData.meta"),"."),Object(o.b)("h4",{id:"arguments"},"Arguments"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"popdata")," : The ",Object(o.b)("inlineCode",{parentName:"li"},"PopData")," object to add information to"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"metadata")," : A ",Object(o.b)("inlineCode",{parentName:"li"},"Vector")," with the metadata you wish to add to the ",Object(o.b)("inlineCode",{parentName:"li"},"PopData"),", in the same order as the names appear in ",Object(o.b)("inlineCode",{parentName:"li"},"PopData.meta"))),Object(o.b)("h4",{id:"keyword-arguments"},"Keyword Arguments"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"name")," : String of the name of this new column"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"loci")," : Boolean of whether to also add this information to ",Object(o.b)("inlineCode",{parentName:"li"},"PopData.loci")," (default: ",Object(o.b)("inlineCode",{parentName:"li"},"true"),")"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"categorical"),' : Boolean of whether the metadata being added is categorical aka "factors" (default: ',Object(o.b)("inlineCode",{parentName:"li"},"true"),")"))),Object(o.b)(l.a,{value:"d",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-julia"}),"add_meta!(popdata::PopData, samples::Vector{String}, metadata::T; name::String, loci::Bool = true, categorical::Bool = true) where T <: AbstractVector\n")),Object(o.b)("p",null,"Add an additional metadata information to a ",Object(o.b)("inlineCode",{parentName:"p"},"PopData")," object. Mutates ",Object(o.b)("inlineCode",{parentName:"p"},"PopData")," in place.\nTakes a vector of sample names if the metadata is not in the same order as samples appear\nin ",Object(o.b)("inlineCode",{parentName:"p"},"PopData.meta"),"."),Object(o.b)("h4",{id:"arguments-1"},"Arguments"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"popdata")," : The ",Object(o.b)("inlineCode",{parentName:"li"},"PopData")," object to add information to"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"sample")," : A ",Object(o.b)("inlineCode",{parentName:"li"},"Vector{String}")," of sample names corresponding to the order of the provided ",Object(o.b)("inlineCode",{parentName:"li"},"metadata")," "),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"metadata")," : A ",Object(o.b)("inlineCode",{parentName:"li"},"Vector")," with the metadata you wish to add to the ",Object(o.b)("inlineCode",{parentName:"li"},"PopData"),", in the same order as the names appear in ",Object(o.b)("inlineCode",{parentName:"li"},"PopData.meta"))),Object(o.b)("h4",{id:"keyword-arguments-1"},"Keyword Arguments"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"name")," : String of the name of this new column"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"loci")," : Boolean of whether to also add this information to ",Object(o.b)("inlineCode",{parentName:"li"},"PopData.loci")," (default: ",Object(o.b)("inlineCode",{parentName:"li"},"true"),")"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"categorical"),' : Boolean of whether the metadata being added is categorical aka "factors" (default: ',Object(o.b)("inlineCode",{parentName:"li"},"true"),")")))))}s.isMDXComponent=!0},145:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return p}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=r.a.createContext({}),b=function(e){var t=r.a.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=b(e.components);return r.a.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=b(a),m=n,p=u["".concat(i,".").concat(m)]||u[m]||s[m]||o;return a?r.a.createElement(p,l(l({ref:t},d),{},{components:a})):r.a.createElement(p,l({ref:t},d))}));function p(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var d=2;d<o;d++)i[d]=a[d];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},146:function(e,t,a){"use strict";function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}},147:function(e,t,a){"use strict";var n=a(0),r=a(148);t.a=function(){var e=Object(n.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},148:function(e,t,a){"use strict";var n=a(0),r=Object(n.createContext)(void 0);t.a=r},149:function(e,t,a){"use strict";var n=a(0),r=a.n(n),o=a(147),i=a(146),l=a(52),c=a.n(l),d=37,b=39;t.a=function(e){var t=e.lazy,a=e.block,l=e.children,u=e.defaultValue,s=e.values,m=e.groupId,p=e.className,f=Object(o.a)(),O=f.tabGroupChoices,j=f.setTabGroupChoices,h=Object(n.useState)(u),g=h[0],N=h[1];if(null!=m){var y=O[m];null!=y&&y!==g&&s.some((function(e){return e.value===y}))&&N(y)}var v=function(e){N(e),null!=m&&j(m,e)},C=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":a},p)},s.map((function(e){var t=e.value,a=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===t,className:Object(i.a)("tabs__item",c.a.tabItem,{"tabs__item--active":g===t}),key:t,ref:function(e){return C.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case b:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case d:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(C,e.target,e)},onFocus:function(){return v(t)},onClick:function(){v(t)}},a)}))),t?Object(n.cloneElement)(l.filter((function(e){return e.props.value===g}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},l.map((function(e,t){return Object(n.cloneElement)(e,{key:t,hidden:e.props.value!==g})}))))}},150:function(e,t,a){"use strict";var n=a(3),r=a(0),o=a.n(r);t.a=function(e){var t=e.children,a=e.hidden,r=e.className;return o.a.createElement("div",Object(n.a)({role:"tabpanel"},{hidden:a,className:r}),t)}}}]);