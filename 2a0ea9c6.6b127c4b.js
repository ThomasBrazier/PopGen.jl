(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{134:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),d=a,m=u["".concat(o,".").concat(d)]||u[d]||b[d]||i;return n?r.a.createElement(m,l(l({ref:t},p),{},{components:n})):r.a.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},72:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n(2),r=n(6),i=(n(0),n(134)),o={id:"dataexploration",title:"DataExploration.jl",sidebar_label:"DataExploration.jl"},l={unversionedId:"api/dataexploration",id:"api/dataexploration",isDocsHomePage:!1,title:"DataExploration.jl",description:"missing",source:"@site/docs/api/DataExploration.md",slug:"/api/dataexploration",permalink:"/PopGen.jl/docs/api/dataexploration",editUrl:"https://github.com/pdimens/popgen.jl/edit/documentation/docs/api/DataExploration.md",version:"current",lastUpdatedAt:1605726478,sidebar_label:"DataExploration.jl",sidebar:"docs",previous:{title:"Datasets.jl",permalink:"/PopGen.jl/docs/api/datasets"},next:{title:"Delimited.jl",permalink:"/PopGen.jl/docs/api/delimited"}},c=[{value:"<code>missing</code>",id:"missing",children:[]},{value:"<code>pairwise_identical</code>",id:"pairwise_identical",children:[]}],p={rightToc:c};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"missing"},Object(i.b)("inlineCode",{parentName:"h3"},"missing")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-julia"}),'missing(data::PopData; by::String = "sample")\n')),Object(i.b)("p",null,"Get missing genotype information in a ",Object(i.b)("inlineCode",{parentName:"p"},"PopData"),". Specify a mode of operation to return a DataFrame corresponding with that missing information."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Modes")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'"sample"')," - returns a count and list of missing loci per individual (default)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'"pop"')," - returns a count of missing genotypes per population"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'"locus"')," - returns a count of missing genotypes per locus"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'"full"')," - returns a count of missing genotypes per locus per population")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-julia"}),'missing(@gulfsharks, by = "pop")\n')),Object(i.b)("hr",null),Object(i.b)("h3",{id:"pairwise_identical"},Object(i.b)("inlineCode",{parentName:"h3"},"pairwise_identical")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"pairwise_identical(data::PopData)\n")),Object(i.b)("p",null,"Return a table of the percent of identical genotypes at each locus between all pairs of all individuals."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-julia"}),"julia> cats = @nancycats;\njulia> pairwise_identical(cats)\n27966\xd74 DataFrame\n\u2502 Row   \u2502 sample_1 \u2502 sample_2 \u2502 identical \u2502 n     \u2502\n\u2502       \u2502 String   \u2502 String   \u2502 Float64   \u2502 Int64 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1     \u2502 N215     \u2502 N216     \u2502 0.5       \u2502 8     \u2502\n\u2502 2     \u2502 N215     \u2502 N217     \u2502 0.25      \u2502 8     \u2502\n\u2502 3     \u2502 N215     \u2502 N218     \u2502 0.38      \u2502 8     \u2502\n\u2502 4     \u2502 N215     \u2502 N219     \u2502 0.38      \u2502 8     \u2502\n\u2502 5     \u2502 N215     \u2502 N220     \u2502 0.25      \u2502 8     \u2502\n\u2502 6     \u2502 N215     \u2502 N221     \u2502 0.5       \u2502 8     \u2502\n\u22ee\n\u2502 27960 \u2502 N296     \u2502 N290     \u2502 0.0       \u2502 7     \u2502\n\u2502 27961 \u2502 N297     \u2502 N281     \u2502 0.14      \u2502 7     \u2502\n\u2502 27962 \u2502 N297     \u2502 N289     \u2502 0.43      \u2502 7     \u2502\n\u2502 27963 \u2502 N297     \u2502 N290     \u2502 0.29      \u2502 7     \u2502\n\u2502 27964 \u2502 N281     \u2502 N289     \u2502 0.25      \u2502 8     \u2502\n\u2502 27965 \u2502 N281     \u2502 N290     \u2502 0.43      \u2502 7     \u2502\n\u2502 27966 \u2502 N289     \u2502 N290     \u2502 0.14      \u2502 7     \u2502\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"pairwise_identical(data::PopData, sample_names::Vector{String})\n")),Object(i.b)("p",null,"Return a table of the percent of identical genotypes at each locus between all pairs of specified individuals."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-julia"}),"julia> cats = @nancycats;\njulia> pairwise_identical(cats, samples(cats)[1:4])\n6\xd74 DataFrame\n\u2502 Row \u2502 sample_1 \u2502 sample_2 \u2502 identical \u2502 n     \u2502\n\u2502     \u2502 String   \u2502 String   \u2502 Float64   \u2502 Int64 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1   \u2502 N215     \u2502 N216     \u2502 0.5       \u2502 8     \u2502\n\u2502 2   \u2502 N215     \u2502 N217     \u2502 0.25      \u2502 8     \u2502\n\u2502 3   \u2502 N215     \u2502 N218     \u2502 0.38      \u2502 8     \u2502\n\u2502 4   \u2502 N216     \u2502 N217     \u2502 0.12      \u2502 8     \u2502\n\u2502 5   \u2502 N216     \u2502 N218     \u2502 0.25      \u2502 8     \u2502\n\u2502 6   \u2502 N217     \u2502 N218     \u2502 0.0       \u2502 9     \u2502\n")))}s.isMDXComponent=!0}}]);