(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{149:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),s=p(n),d=a,m=s["".concat(l,".").concat(d)]||s[d]||u[d]||i;return n?r.a.createElement(m,o(o({ref:t},b),{},{components:n})):r.a.createElement(m,o({ref:t},b))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var b=2;b<i;b++)l[b]=n[b];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),i=(n(0),n(149)),l={id:"latest",title:"What's New",sidebar_label:"What's New"},o={unversionedId:"latest",id:"latest",isDocsHomePage:!1,title:"What's New",description:"v0.4.3",source:"@site/docs/latest.md",slug:"/latest",permalink:"/PopGen.jl/docs/latest",editUrl:"https://github.com/pdimens/popgen.jl/edit/documentation/docs/latest.md",version:"current",lastUpdatedAt:1612464823,sidebar_label:"What's New"},c=[{value:"v0.4.3",id:"v043",children:[{value:"Changes",id:"changes",children:[]}]},{value:"v0.4.0",id:"v040",children:[]}],b={toc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"v043"},"v0.4.3"),Object(i.b)("p",null,"This release fixes and simplifies the under-the-hood ",Object(i.b)("inlineCode",{parentName:"p"},"allele_freq"),", ",Object(i.b)("inlineCode",{parentName:"p"},"geno_freq"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"geno_count_xxx")," functions. The are faster now, and they infer types, making the output have expected type behavior. "),Object(i.b)("h3",{id:"changes"},"Changes"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"You no longer need to import both ",Object(i.b)("inlineCode",{parentName:"li"},"GeneticVariations.jl")," and ",Object(i.b)("inlineCode",{parentName:"li"},"GZip.jl")," to have the ",Object(i.b)("inlineCode",{parentName:"li"},"vcf")," and ",Object(i.b)("inlineCode",{parentName:"li"},"bcf")," functions work. The reason is that if your file isn't gzipped, then why load in an unnecessary library? Therefore, if your file is gzipped, then you'll need to load in ",Object(i.b)("inlineCode",{parentName:"li"},"GZip.jl")," too, otherwise you just need ",Object(i.b)("inlineCode",{parentName:"li"},"GeneticVariation.jl"),". \ud83c\udd92"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"avg_allele_freq")," now has a different method, where the second positional argument is ",Object(i.b)("inlineCode",{parentName:"li"},"power"),", which will raise the calculated frequencies to the given value (default = ",Object(i.b)("inlineCode",{parentName:"li"},"1"),"). This simplifies having to do things like square the values of the resulting ",Object(i.b)("inlineCode",{parentName:"li"},"Dict"),".")),Object(i.b)("hr",null),Object(i.b)("h2",{id:"v040"},"v0.4.0"),Object(i.b)("p",null,"This release adds a slew of relatedness estimators, which can be bootstrapped and are performed in parallel. Paired with release of ",Object(i.b)("inlineCode",{parentName:"p"},"PopGenSims.jl v0.0.2"),"."),Object(i.b)("h4",{id:"breaking-changes"},"Breaking changes"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"CategoricalArrays replaced with PooledArrays"),Object(i.b)("li",{parentName:"ul"},"VCF/BCF now lazy load and require ",Object(i.b)("inlineCode",{parentName:"li"},"GeneticVariations.jl")," and ",Object(i.b)("inlineCode",{parentName:"li"},"GZip.jl")," separately")),Object(i.b)("h4",{id:"new-features"},"New features"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"relatedness estimators (see blog for tutorial)"),Object(i.b)("li",{parentName:"ul"},"internal functions:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"loci_dataframe")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"loci_matrix")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"nonmissings")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"pairwise_pairs")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"pairwise_identical()")," to compare percent identical loci"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"phase()")," method"),Object(i.b)("li",{parentName:"ul"},"Structure/fastStructure file IO")),Object(i.b)("h4",{id:"changes-1"},"Changes"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"some internal function locations moved around (housekeeping)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"nancycats()")," and ",Object(i.b)("inlineCode",{parentName:"li"},"gulfsharks()")," are being phased out in favor of ",Object(i.b)("inlineCode",{parentName:"li"},"@nancycats")," and ",Object(i.b)("inlineCode",{parentName:"li"},"@gulfsharks"),". (You will see deprecation warning)"),Object(i.b)("li",{parentName:"ul"},"documentation (Docusaurus) upgrades",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"edit button now correctly works on blog posts"))),Object(i.b)("li",{parentName:"ul"},"B/VCF reader rewritten (see docs)")))}p.isMDXComponent=!0}}]);